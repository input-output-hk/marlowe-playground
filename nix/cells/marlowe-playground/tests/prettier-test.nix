{ inputs, cell }:
let
  inherit (cell.library) pkgs;
  inherit (cell.scripts) fix-prettier;

  # just haskell sources and the stylish-haskell config file
  src = pkgs.lib.cleanSourceWith {
    src = inputs.self;
    filter = with pkgs.lib;
      name: type:
        let baseName = baseNameOf (toString name); in
        (
          (type == "regular" && hasSuffix ".js" baseName) ||
          (type == "regular" && hasSuffix ".ts" baseName) ||
          (type == "regular" && hasSuffix ".html" baseName) ||
          (type == "regular" && hasSuffix ".css" baseName) ||
          (type == "directory" && (baseName != "generated"
          && baseName != "output"
          && baseName != "node_modules"
          && baseName != ".spago"))
        );
  };
in
pkgs.runCommand "prettier-check" { buildInputs = [ fix-prettier pkgs.diffutils pkgs.glibcLocales ]; } ''
  set +e
  cp -a ${src} orig
  cp -a ${src} prettier
  chmod -R +w prettier
  cd prettier
  fix-prettier
  cd ..
  diff --brief --recursive orig prettier > /dev/null
  EXIT_CODE=$?
  if [[ $EXIT_CODE != 0 ]]
  then
    mkdir -p $out/nix-support
    diff -ur orig prettier > $out/prettier.diff
    echo "file none $out/prettier.diff" > $out/nix-support/hydra-build-products
    echo "*** prettier found changes that need addressed first"
    echo "*** Please run \`nix-shell --run fix-prettier\` and commit changes"
    echo "*** or apply the diff generated by hydra if you don't have nix."
    exit $EXIT_CODE
  else
    echo $EXIT_CODE > $out
  fi
''
