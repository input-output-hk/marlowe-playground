import * as internal from "src/Blockly/Internal.ts";

export const createBlocklyInstance_ = internal.createBlocklyInstance_;
export const addBlockType_ = internal.addBlockType_;
export const addChangeListener = internal.addChangeListener;
export const centerOnBlock = internal.centerOnBlock;
export const clearUndoStack = internal.clearUndoStack;
export const clearWorkspace = internal.clearWorkspace;
export const connect = internal.connect;
export const connectToOutput = internal.connectToOutput;
export const connectToPrevious = internal.connectToPrevious;
export const createWorkspace = internal.createWorkspace;
export const debugBlockly = internal.debugBlockly;
export const fieldName = internal.fieldName;
export const fieldRow = internal.fieldRow;
export const getBlockById_ = internal.getBlockById_;
export const getBlockType = internal.getBlockType;
export const hideChaff = internal.hideChaff;
export const initializeWorkspace_ = internal.initializeWorkspace_;
export const inputList = internal.inputList;
export const inputName = internal.inputName;
export const inputType = internal.inputType;
export const isWorkspaceEmpty = internal.isWorkspaceEmpty;
export const loadWorkspace = internal.loadWorkspace;
export const newBlock = internal.newBlock;
export const nextConnection = internal.nextConnection;
export const previousConnection = internal.previousConnection;
export const removeChangeListener = internal.removeChangeListener;
export const render = internal.render;
export const resize = internal.resize;
export const select = internal.select;
export const setFieldText = internal.setFieldText;
export const setGroup = internal.setGroup;
export const updateToolbox_ = internal.updateToolbox_;
export const workspaceToDom = internal.workspaceToDom;
export const workspaceXML = internal.workspaceXML;
